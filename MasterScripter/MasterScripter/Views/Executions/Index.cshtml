@using System.Linq.Expressions
@using MasterScripter.DAL.Models
@model IEnumerable<MasterScripter.DAL.Models.Execution>

@{
    ViewBag.Title = "Index";
}

@functions{

    public string GetIconText(Status status)
    {
        switch (status)
        {
            case Status.Running:
                return "directions_run";
            case Status.Succeeded:
                return "done";
            case Status.Failed:
                return "error_outline";
            case Status.Waiting:
            default:
                return "access_time";
        }
    }

    public string GetCssClass(Status status, string prefix = "")
    {
        switch (status)
        {
            case Status.Running:
                return prefix + "primary";
            case Status.Succeeded:
                return prefix + "success";
            case Status.Failed:
                return prefix + "danger";
            case Status.Waiting:
            default:
                return prefix + "secondary";
        }
    }

}

<div class="container container-fluid">
    <div class="row">
        <div class="col-md-1">
            <i class="material-icons" data-toggle="tooltip" data-placement="top" title="Filter executions by status">filter_list</i>
        </div>
        <div class="col-md-11">
            <div class="row statuses">
                <div class="col-md-3">
                    <button type="button" aria-pressed="false" class="btn btn-block btn-outline-primary active">Running</button>
                </div>
                <div class="col-md-3">       
                    <button type="button" aria-pressed="false" class="btn btn-block btn-outline-success active">Succeeded</button>
                </div>
                <div class="col-md-3">    
                    <button type="button" aria-pressed="false" class="btn btn-block btn-outline-secondary active">Waiting</button>
                </div>
                <div class="col-md-3">    
                    <button type="button" aria-pressed="false" class="btn btn-block btn-outline-danger active">Failed</button>
                </div>
            </div>
        </div>
    </div>
    
    
    <div class="row">
        <div class="col-md-1">
            <i class="material-icons" data-toggle="tooltip" data-placement="top" title="Sotrt executions by date">sort</i>
        </div>
        <div class="col-md-11">
            <div class="row  order-time">
                <div class="col-md-3">            
                    <button type="button" aria-pressed="false" class="btn btn-block btn-info active">Creation Date</button>
                </div>
                <div class="col-md-3">          
                    <button type="button" aria-pressed="false" class="btn btn-block btn-info">Start Time</button>
                </div>
                <div class="col-md-3">        
                    <button type="button" aria-pressed="false" class="btn btn-block btn-info">End Time</button>
                </div>
                <div class="col-md-3">      
                    <button type="button" aria-pressed="false" class="btn btn-block btn-info">Schedule Time</button>
                </div>
            </div>
        </div>
    </div>
    

</div>
<div class="container container-fluid">
    <div class="page-header" id="executionsTimeline">
        <h1>Timeline</h1>
    </div>
</div>

<div class="modal fade" id="executionDetailModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    
    function updateTimeLine(collection, statuses, order) {
        var url = '@Url.Action("GetExecutionTimeline", "Executions")';

        $("#executionsTimeline").load(url, { statuses: statuses, order: order });
    }

    $('#executionDetailModal').on('show.bs.modal',
        function (event) {
            var button = $(event.relatedTarget); // Button that triggered the modal
            var id = button.data('whatever').split('_')[1]; // Extract info from data-* attributes

            var url = '@Url.Action("GetExecutionDetail", "Executions")';

            $('#executionDetailModal .modal-body').load(url, { id: id });
            $('#exampleModalLabel').text('Execution #' + id + ' details');

            var modal = $(this);

        });

    var statuses = $('.statuses button.active').toArray().map(elem => $(elem).text().toLowerCase());
    var order = $('.order-time button.active').first().text().toLowerCase();
    updateTimeLine(null, statuses, order);

    $(".order-time button").click(function (event) {
        var statuses = $('.statuses button.active').toArray() // get only selected (with "active" class)
            .map(elem => $(elem).text().toLowerCase()); // get the text from the buttton

        $('.order-time button.active').removeClass('active');
        $(event.target).addClass('active');

        var order = $('.order-time button.active').first().text().toLowerCase();

        updateTimeLine(null, statuses, order);
    });

    $(".statuses button").click(function (event) {
        var clickedButton = $(event.target);

        clickedButton.toggleClass('active');

        var statuses = $('.statuses button.active').toArray().map(elem => $(elem).text().toLowerCase());

        if (statuses.length === 0) {
            clickedButton.toggleClass('active');
        }

        var order = $('.order-time button.active').first().text().toLowerCase();

        updateTimeLine(null, statuses, order);
    });
</script>

<p>
    @Html.ActionLink("Create New", "Create")
</p>



